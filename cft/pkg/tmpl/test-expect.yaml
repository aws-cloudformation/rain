Parameters:
  BucketRetentionPolicy:
    Type: String
    AllowedValues:
      - Delete
      - Retain

Conditions:
  ConditionA:
    !Equals:
      - true
      - true

Resources:
  SecondResourceInOriginal:
    Type: AWS::SQS::Queue

  MyBucketBucket:
    DeletionPolicy: !Ref BucketRetentionPolicy
    UpdateReplacePolicy: Delete
    Type: AWS::S3::Bucket
    DependsOn:
      - MyBucketAdditionalResource1
      - MyBucketAdditionalResource2
      - SecondResourceInOriginal
    Properties:
      LoggingConfiguration:
        DestinationBucketName: !Ref MyBucketLogBucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: test-tag
          Value: test-value1
        - Key: test-tag2
          Value: test-value2
      BucketName: ezbeard-cep-test-module-bucket
      VersioningConfiguration:
        Status: Enabled
    Condition: ConditionA
  MyBucketLogBucket:
    Condition: ConditionA
    DeletionPolicy: Delete
    UpdateReplacePolicy: !Ref BucketRetentionPolicy
    Type: AWS::S3::Bucket
    DependsOn:
      - MyBucketAdditionalResource1
      - MyBucketAdditionalResource2
    Metadata:
      Comment: This bucket records access logs for MyBucket
    Properties:
      BucketName: my-log-bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  MyBucketAdditionalResource1:
    Type: AWS::S3::Bucket
    Properties:
      X: !Ref NotFound
      A: !GetAtt MyBucketBucket.Arn
      B:
        - !GetAtt MyBucketBucket.Arn
        - C: !GetAtt MyBucketBucket.Arn

  MyBucketAdditionalResource2:
    Type: AWS::S3::Bucket

  MyBucketDependsOnBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - MyBucketBucket

  MyBucketConditionalResource:
    Type: AWS::S3::Bucket
    Condition: ConditionA

  WithoutExtensionBucketA:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: AAA

  WithoutExtensionBucketB:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: BBB

  MyBucketSubResource:
    Type: AWS::S3::Bucket
    Properties:
      X: !Sub "abc-${AWS::Region}-my-log-bucket"
      Y: !Sub "abc-${MyBucketAdditionalResource2.Name}"

