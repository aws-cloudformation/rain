Description: |
  This pipeline watches for changes to the source repository.
  Generated by CloudFormation Rain (rain build -b pipeline codecommit).
  Apache-2.0 License. Adapt this template to your needs and thoruoughly test
  it before introducing it in a production environment. **WARNING** This
  template will create resources in your account that may incur billing
  charges.

Metadata:
  AWSToolsMetrics:
    Rain: '{"Version":"v1.21.0","Experimental":true,"HasModules":false,"HasRainSection":false}'

Parameters:
  ArtifactBucket:
    Description: The name of the bucket to use for storing pipeline artifacts
    Type: String

  AppName:
    Description: This will be used for resource names
    Type: String

  Branch:
    Description: The name of the source branch in CodeCommit
    Type: String
    Default: main

Resources:
  Repo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref AppName
      RepositoryDescription: Sample source code repository

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AppName
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommitSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !GetAtt Repo.Name
                BranchName: !Ref Branch
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: source
        - Name: Build
          Actions:
            - Name: Rain
              InputArtifacts:
                - Name: source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref Project
                EnvironmentVariables: |-
                  [
                    {
                      "name": "MY_VAR",
                      "type": "PLAINTEXT",
                      "value": "abc"
                    }
                  ]
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"

  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AppName}-pipeline-policy
      Roles:
        - !Ref PipelineRole
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactBucket}
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactBucket}/*
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:StopBuild
              - codebuild:RetryBuild
              - codebuild:StartBuildBatch
              - codebuild:RetryBuildBatch
              - codebuild:StopBuildBatch
            Effect: Allow
            Resource:
              - !GetAtt Project.Arn
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${AppName}

  SourceChangeEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /

  SourceChangeEventPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AppName}-source-change-policy
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource:
              - !Join
                - ""
                - - 'arn:'
                  - !Ref AWS::Partition
                  - ':codepipeline:'
                  - !Ref AWS::Region
                  - ':'
                  - !Ref AWS::AccountId
                  - ':'
                  - !Ref Pipeline
      Roles:
        - !Ref SourceChangeEventRole

  SourceChangeEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Join
            - ""
            - - 'arn:'
              - !Ref AWS::Partition
              - ':codecommit:'
              - !Ref AWS::Region
              - ':'
              - !Ref AWS::AccountId
              - ':'
              - !GetAtt Repo.Name
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        - Arn: !Join
            - ""
            - - 'arn:'
              - !Ref AWS::Partition
              - ':codepipeline:'
              - !Ref AWS::Region
              - ':'
              - !Ref AWS::AccountId
              - ':'
              - !Ref Pipeline
          RoleArn: !GetAtt SourceChangeEventRole.Arn
          Id: !Sub ${AppName}-pipeline-target

  Project:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AppName}-build
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        ComputeType: BUILD_GENERAL1_LARGE
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: MY_VAR
            Type: PLAINTEXT
            Value: xyz
      ServiceRole: !GetAtt ProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - pwd
                - ls
                - # TODO: Add your build commands here
      TimeoutInMinutes: 480

  ProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"

  ProjectPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:*
            Effect: Allow
            Resource:
              - !Join
                - ""
                - - 'arn:'
                  - !Ref AWS::Partition
                  - ':logs:'
                  - !Ref AWS::Region
                  - ':'
                  - !Ref AWS::AccountId
                  - :log-group:/aws/codebuild/
                  - !Ref Project
                  - :*
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:StopBuild
              - codebuild:RetryBuild
              - codebuild:StartBuildBatch
              - codebuild:RetryBuildBatch
              - codebuild:StopBuildBatch
            Effect: Allow
            Resource:
              - !GetAtt Project.Arn
          - Action:
              - s3:Get*
              - s3:List*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactBucket}
              - !Sub arn:${AWS::Partition}:s3:::${ArtifactBucket}/*
        Version: "2012-10-17"
      PolicyName: !Sub ${AppName}-build-project-policy
      Roles:
        - !Ref ProjectRole
