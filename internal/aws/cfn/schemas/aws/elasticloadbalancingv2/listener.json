{
  "typeName": "AWS::ElasticLoadBalancingV2::Listener",
  "description": "Specifies a listener for an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-elasticloadbalancingv2.git",
  "additionalProperties": false,
  "properties": {
    "SslPolicy": {
      "type": "string",
      "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported.\n Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic.\n For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the *Network Load Balancers Guide*."
    },
    "LoadBalancerArn": {
      "type": "string",
      "relationshipRef": {
        "typeName": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "propertyPath": "/properties/LoadBalancerArn"
      },
      "description": "The Amazon Resource Name (ARN) of the load balancer."
    },
    "ListenerAttributes": {
      "type": "array",
      "description": "The listener attributes.",
      "uniqueItems": true,
      "insertionOrder": false,
      "arrayType": "AttributeList",
      "items": {
        "$ref": "#/definitions/ListenerAttribute"
      }
    },
    "DefaultActions": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Action"
      },
      "description": "The actions for the default rule. You cannot define a condition for a default rule.\n To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html)."
    },
    "Port": {
      "type": "integer",
      "description": "The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer."
    },
    "Certificates": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "description": "The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html)."
    },
    "Protocol": {
      "type": "string",
      "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can?t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer."
    },
    "ListenerArn": {
      "type": "string",
      "description": ""
    },
    "AlpnPolicy": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy."
    },
    "MutualAuthentication": {
      "$ref": "#/definitions/MutualAuthentication",
      "description": "The mutual authentication configuration information."
    }
  },
  "definitions": {
    "ListenerAttribute": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "description": "The value of the attribute."
        },
        "Key": {
          "type": "string",
          "description": "The name of the attribute.\n The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.\n  +   ``tcp.idle_timeout.seconds`` - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds."
        }
      },
      "description": "Information about a listener attribute."
    },
    "MutualAuthentication": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Mode": {
          "type": "string",
          "description": "The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``."
        },
        "TrustStoreArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of the trust store."
        },
        "IgnoreClientCertificateExpiry": {
          "type": "boolean",
          "description": "Indicates whether expired client certificates are ignored."
        },
        "AdvertiseTrustStoreCaNames": {
          "type": "string",
          "description": ""
        }
      },
      "description": "Specifies the configuration information for mutual authentication."
    },
    "FixedResponseConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ContentType": {
          "type": "string",
          "description": "The content type.\n Valid Values: text/plain | text/css | text/html | application/javascript | application/json"
        },
        "StatusCode": {
          "type": "string",
          "description": "The HTTP response code (2XX, 4XX, or 5XX)."
        },
        "MessageBody": {
          "type": "string",
          "description": "The message."
        }
      },
      "required": [
        "StatusCode"
      ],
      "description": "Specifies information required when returning a custom HTTP response."
    },
    "TargetGroupTuple": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TargetGroupArn": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "propertyPath": "/properties/TargetGroupArn"
          },
          "description": "The Amazon Resource Name (ARN) of the target group."
        },
        "Weight": {
          "type": "integer",
          "description": "The weight. The range is 0 to 999."
        }
      },
      "description": "Information about how traffic will be distributed between multiple target groups in a forward rule."
    },
    "Action": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Order": {
          "type": "integer",
          "description": "The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first."
        },
        "TargetGroupArn": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "propertyPath": "/properties/TargetGroupArn"
          },
          "description": "The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to a single target group. To route to one or more target groups, use ``ForwardConfig`` instead."
        },
        "FixedResponseConfig": {
          "$ref": "#/definitions/FixedResponseConfig",
          "description": "[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when ``Type`` is ``fixed-response``."
        },
        "AuthenticateCognitoConfig": {
          "$ref": "#/definitions/AuthenticateCognitoConfig",
          "description": "[HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when ``Type`` is ``authenticate-cognito``."
        },
        "Type": {
          "type": "string",
          "description": "The type of action."
        },
        "RedirectConfig": {
          "$ref": "#/definitions/RedirectConfig",
          "description": "[Application Load Balancer] Information for creating a redirect action. Specify only when ``Type`` is ``redirect``."
        },
        "ForwardConfig": {
          "$ref": "#/definitions/ForwardConfig",
          "description": "Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group specified in ``TargetGroupArn``."
        },
        "AuthenticateOidcConfig": {
          "$ref": "#/definitions/AuthenticateOidcConfig",
          "description": "[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when ``Type`` is ``authenticate-oidc``."
        }
      },
      "required": [
        "Type"
      ],
      "description": "Specifies an action for a listener rule."
    },
    "AuthenticateCognitoConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "OnUnauthenticatedRequest": {
          "type": "string",
          "description": "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value."
        },
        "UserPoolClientId": {
          "type": "string",
          "anyOf": [
            {
              "relationshipRef": {
                "typeName": "AWS::Cognito::UserPoolClient",
                "propertyPath": "/properties/UserPoolId"
              }
            },
            {
              "relationshipRef": {
                "typeName": "AWS::Cognito::UserPoolClient",
                "propertyPath": "/properties/ClientId"
              }
            }
          ],
          "description": "The ID of the Amazon Cognito user pool client."
        },
        "UserPoolDomain": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Cognito::UserPoolDomain",
            "propertyPath": "/properties/Id"
          },
          "description": "The domain prefix or fully-qualified domain name of the Amazon Cognito user pool."
        },
        "SessionTimeout": {
          "type": "string",
          "description": "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days)."
        },
        "Scope": {
          "type": "string",
          "description": "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP."
        },
        "SessionCookieName": {
          "type": "string",
          "description": "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie."
        },
        "UserPoolArn": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Cognito::UserPool",
            "propertyPath": "/properties/Arn"
          },
          "description": "The Amazon Resource Name (ARN) of the Amazon Cognito user pool."
        },
        "AuthenticationRequestExtraParams": {
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9]+": {
              "type": "string"
            }
          },
          "description": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
        }
      },
      "required": [
        "UserPoolClientId",
        "UserPoolDomain",
        "UserPoolArn"
      ],
      "description": "Specifies information required when integrating with Amazon Cognito to authenticate users."
    },
    "RedirectConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Path": {
          "type": "string",
          "description": "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}."
        },
        "Query": {
          "type": "string",
          "description": "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords."
        },
        "Port": {
          "type": "string",
          "description": "The port. You can specify a value from 1 to 65535 or #{port}."
        },
        "Host": {
          "type": "string",
          "description": "The hostname. This component is not percent-encoded. The hostname can contain #{host}."
        },
        "Protocol": {
          "type": "string",
          "description": "The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You can't redirect HTTPS to HTTP."
        },
        "StatusCode": {
          "type": "string",
          "description": "The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302)."
        }
      },
      "required": [
        "StatusCode"
      ],
      "description": "Information about a redirect action.\n A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.\n You can reuse URI components using the following reserved keywords:\n  +  #{protocol}\n  +  #{host}\n  +  #{port}\n  +  #{path} (the leading \"/\" is removed)\n  +  #{query}\n  \n For example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\", or the query to \"#{query}&value=xyz\"."
    },
    "TargetGroupStickinessConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Indicates whether target group stickiness is enabled."
        },
        "DurationSeconds": {
          "type": "integer",
          "description": "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days)."
        }
      },
      "description": "Information about the target group stickiness for a rule."
    },
    "ForwardConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TargetGroupStickinessConfig": {
          "$ref": "#/definitions/TargetGroupStickinessConfig",
          "description": "Information about the target group stickiness for a rule."
        },
        "TargetGroups": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TargetGroupTuple"
          },
          "description": "Information about how traffic will be distributed between multiple target groups in a forward rule."
        }
      },
      "description": "Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group specified in ``TargetGroupArn``."
    },
    "AuthenticateOidcConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "OnUnauthenticatedRequest": {
          "type": "string",
          "description": "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value."
        },
        "TokenEndpoint": {
          "type": "string",
          "description": "The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path."
        },
        "SessionTimeout": {
          "type": "string",
          "description": "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days)."
        },
        "Scope": {
          "type": "string",
          "description": "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP."
        },
        "Issuer": {
          "type": "string",
          "description": "The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path."
        },
        "ClientSecret": {
          "type": "string",
          "description": "The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set ``UseExistingClientSecret`` to true."
        },
        "UserInfoEndpoint": {
          "type": "string",
          "description": "The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path."
        },
        "ClientId": {
          "type": "string",
          "description": "The OAuth 2.0 client identifier."
        },
        "AuthorizationEndpoint": {
          "type": "string",
          "description": "The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path."
        },
        "SessionCookieName": {
          "type": "string",
          "description": "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie."
        },
        "UseExistingClientSecret": {
          "type": "boolean",
          "description": "Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false."
        },
        "AuthenticationRequestExtraParams": {
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9]+": {
              "type": "string"
            }
          },
          "description": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint."
        }
      },
      "required": [
        "TokenEndpoint",
        "Issuer",
        "UserInfoEndpoint",
        "ClientId",
        "AuthorizationEndpoint"
      ],
      "anyOf": [
        {
          "required": [
            "ClientSecret"
          ]
        },
        {
          "required": [
            "UseExistingClientSecret"
          ]
        }
      ],
      "description": "Specifies information required using an identity provide (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users."
    },
    "Certificate": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CertificateArn": {
          "type": "string",
          "anyOf": [
            {
              "relationshipRef": {
                "typeName": "AWS::CertificateManager::Certificate",
                "propertyPath": "/properties/Id"
              }
            },
            {
              "relationshipRef": {
                "typeName": "AWS::IAM::ServerCertificate",
                "propertyPath": "/properties/Arn"
              }
            }
          ],
          "description": "The Amazon Resource Name (ARN) of the certificate."
        }
      },
      "description": "Specifies an SSL server certificate to use as the default certificate for a secure listener."
    }
  },
  "required": [
    "LoadBalancerArn",
    "DefaultActions"
  ],
  "createOnlyProperties": [
    "/properties/LoadBalancerArn"
  ],
  "primaryIdentifier": [
    "/properties/ListenerArn"
  ],
  "readOnlyProperties": [
    "/properties/ListenerArn"
  ],
  "writeOnlyProperties": [
    "/properties/DefaultActions/*/AuthenticateOidcConfig/ClientSecret"
  ],
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "handlers": {
    "create": {
      "permissions": [
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:DescribeListeners",
        "cognito-idp:DescribeUserPoolClient",
        "elasticloadbalancing:ModifyListenerAttributes"
      ]
    },
    "delete": {
      "permissions": [
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DescribeListeners"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "LoadBalancerArn": {
            "$ref": "resource-schema.json#/properties/LoadBalancerArn"
          },
          "ListenerArns": {
            "type": "array",
            "uniqueItems": false,
            "items": {
              "$ref": "resource-schema.json#/properties/ListenerArn"
            }
          }
        },
        "oneOf": [
          {
            "required": [
              "LoadBalancerArn"
            ]
          },
          {
            "required": [
              "ListenerArns"
            ]
          }
        ]
      },
      "permissions": [
        "elasticloadbalancing:DescribeListeners"
      ]
    },
    "read": {
      "permissions": [
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeListenerAttributes"
      ]
    },
    "update": {
      "permissions": [
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:DescribeListeners",
        "cognito-idp:DescribeUserPoolClient",
        "elasticloadbalancing:ModifyListenerAttributes"
      ]
    }
  }
}
